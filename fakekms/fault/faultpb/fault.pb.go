// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: fakekms/fault/fault.proto

package faultpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequestMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName string `protobuf:"bytes,1,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
}

func (x *RequestMatcher) Reset() {
	*x = RequestMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fakekms_fault_fault_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMatcher) ProtoMessage() {}

func (x *RequestMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_fakekms_fault_fault_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMatcher.ProtoReflect.Descriptor instead.
func (*RequestMatcher) Descriptor() ([]byte, []int) {
	return file_fakekms_fault_fault_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMatcher) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

type ResponseAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay *durationpb.Duration `protobuf:"bytes,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Error *status.Status       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResponseAction) Reset() {
	*x = ResponseAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fakekms_fault_fault_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAction) ProtoMessage() {}

func (x *ResponseAction) ProtoReflect() protoreflect.Message {
	mi := &file_fakekms_fault_fault_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAction.ProtoReflect.Descriptor instead.
func (*ResponseAction) Descriptor() ([]byte, []int) {
	return file_fakekms_fault_fault_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseAction) GetDelay() *durationpb.Duration {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *ResponseAction) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type Fault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestMatcher *RequestMatcher `protobuf:"bytes,1,opt,name=request_matcher,json=requestMatcher,proto3" json:"request_matcher,omitempty"`
	ResponseAction *ResponseAction `protobuf:"bytes,2,opt,name=response_action,json=responseAction,proto3" json:"response_action,omitempty"`
}

func (x *Fault) Reset() {
	*x = Fault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fakekms_fault_fault_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fault) ProtoMessage() {}

func (x *Fault) ProtoReflect() protoreflect.Message {
	mi := &file_fakekms_fault_fault_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fault.ProtoReflect.Descriptor instead.
func (*Fault) Descriptor() ([]byte, []int) {
	return file_fakekms_fault_fault_proto_rawDescGZIP(), []int{2}
}

func (x *Fault) GetRequestMatcher() *RequestMatcher {
	if x != nil {
		return x.RequestMatcher
	}
	return nil
}

func (x *Fault) GetResponseAction() *ResponseAction {
	if x != nil {
		return x.ResponseAction
	}
	return nil
}

var File_fakekms_fault_fault_proto protoreflect.FileDescriptor

var file_fakekms_fault_fault_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x61, 0x6b, 0x65, 0x6b, 0x6d, 0x73, 0x2f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x6b,
	0x65, 0x6b, 0x6d, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x66, 0x61, 0x6b, 0x65, 0x6b, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x61, 0x6b, 0x65, 0x6b, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x42, 0x0a, 0x0c, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x2e, 0x66, 0x61, 0x6b, 0x65, 0x6b, 0x6d, 0x73, 0x2e, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x30, 0x5a, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x6d, 0x73, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x66, 0x61, 0x6b, 0x65, 0x6b, 0x6d, 0x73,
	0x2f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fakekms_fault_fault_proto_rawDescOnce sync.Once
	file_fakekms_fault_fault_proto_rawDescData = file_fakekms_fault_fault_proto_rawDesc
)

func file_fakekms_fault_fault_proto_rawDescGZIP() []byte {
	file_fakekms_fault_fault_proto_rawDescOnce.Do(func() {
		file_fakekms_fault_fault_proto_rawDescData = protoimpl.X.CompressGZIP(file_fakekms_fault_fault_proto_rawDescData)
	})
	return file_fakekms_fault_fault_proto_rawDescData
}

var file_fakekms_fault_fault_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fakekms_fault_fault_proto_goTypes = []interface{}{
	(*RequestMatcher)(nil),      // 0: fakekms.RequestMatcher
	(*ResponseAction)(nil),      // 1: fakekms.ResponseAction
	(*Fault)(nil),               // 2: fakekms.Fault
	(*durationpb.Duration)(nil), // 3: google.protobuf.Duration
	(*status.Status)(nil),       // 4: google.rpc.Status
	(*emptypb.Empty)(nil),       // 5: google.protobuf.Empty
}
var file_fakekms_fault_fault_proto_depIdxs = []int32{
	3, // 0: fakekms.ResponseAction.delay:type_name -> google.protobuf.Duration
	4, // 1: fakekms.ResponseAction.error:type_name -> google.rpc.Status
	0, // 2: fakekms.Fault.request_matcher:type_name -> fakekms.RequestMatcher
	1, // 3: fakekms.Fault.response_action:type_name -> fakekms.ResponseAction
	2, // 4: fakekms.FaultService.AddFault:input_type -> fakekms.Fault
	5, // 5: fakekms.FaultService.AddFault:output_type -> google.protobuf.Empty
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_fakekms_fault_fault_proto_init() }
func file_fakekms_fault_fault_proto_init() {
	if File_fakekms_fault_fault_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fakekms_fault_fault_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fakekms_fault_fault_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fakekms_fault_fault_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fakekms_fault_fault_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fakekms_fault_fault_proto_goTypes,
		DependencyIndexes: file_fakekms_fault_fault_proto_depIdxs,
		MessageInfos:      file_fakekms_fault_fault_proto_msgTypes,
	}.Build()
	File_fakekms_fault_fault_proto = out.File
	file_fakekms_fault_fault_proto_rawDesc = nil
	file_fakekms_fault_fault_proto_goTypes = nil
	file_fakekms_fault_fault_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FaultServiceClient is the client API for FaultService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaultServiceClient interface {
	AddFault(ctx context.Context, in *Fault, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type faultServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFaultServiceClient(cc grpc.ClientConnInterface) FaultServiceClient {
	return &faultServiceClient{cc}
}

func (c *faultServiceClient) AddFault(ctx context.Context, in *Fault, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/fakekms.FaultService/AddFault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaultServiceServer is the server API for FaultService service.
type FaultServiceServer interface {
	AddFault(context.Context, *Fault) (*emptypb.Empty, error)
}

// UnimplementedFaultServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFaultServiceServer struct {
}

func (*UnimplementedFaultServiceServer) AddFault(context.Context, *Fault) (*emptypb.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method AddFault not implemented")
}

func RegisterFaultServiceServer(s *grpc.Server, srv FaultServiceServer) {
	s.RegisterService(&_FaultService_serviceDesc, srv)
}

func _FaultService_AddFault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fault)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaultServiceServer).AddFault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fakekms.FaultService/AddFault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaultServiceServer).AddFault(ctx, req.(*Fault))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaultService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fakekms.FaultService",
	HandlerType: (*FaultServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFault",
			Handler:    _FaultService_AddFault_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fakekms/fault/fault.proto",
}
